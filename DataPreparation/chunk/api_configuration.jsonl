"# Configuration\n\nSionnas configuration API. It can be used to set global variables which can be used\nby all modules and functions.\n\n`class` `sionna.``Config`[`[source]`](../_modules/sionna/config.html#Config)\n\nThe Sionna configuration class.\n\nThis class is used to define global configuration variables\nthat can be accessed from all modules and functions. It\nis instantiated in `sionna.__init__()` and its properties can be\naccessed as `sionna.config.desired_property`.\n\n`property` `xla_compat`\n\nEnsure that functions execute in an XLA compatible way.\n\nNot all TensorFlow ops support the three execution modes for\nall dtypes: Eager, Graph, and Graph with XLA. For this reason,\nsome functions are implemented differently depending on the\nexecution mode. As it is currently impossible to programmatically\ndetermine if a function is executed in Graph or Graph with XLA mode,\nthe `xla_compat` property can be used to indicate which execution\nmode is desired. Note that most functions will work in all execution\nmodes independently of the value of this property.\n\nThis property can be used like this:\n```python\nimport sionna\nsionna.config.xla_compat=True\n@tf.function(jit_compile=True)\ndef func()\n    # Implementation\nfunc()\n```\n\nType\n\nbool"
